#!/usr/bin/env ruby

require 'pathname'
require 'concurrent-ruby'
require_relative 'lib/peach'

THREADS = ENV['THREADS'] || 2
LANG    = ENV['LANG_CODE'] || 'pt'
MODEL   = '~/Projects/media-downloader-bot/models/ggml-large-v3-turbo.bin'

CMD  = <<-EOC
nice ffmpeg -loglevel quiet -i '%{audio}' -f wav -ac 1 -ar 16000 - | nice whisper.cpp -f - --model #{MODEL} -p 2 > '%{out}'
EOC

def run cmd; puts cmd; system cmd end

files = Pathname.glob('**/*.opus').sort
files.reverse! if ENV['REVERSE']
files.peach threads: THREADS do |a|
  t   = a.sub_ext '.txt'
  next puts "#{a}: skipping as transcription is already done" if File.exist? t
  cmd = CMD % {audio: a, out: t}
  run cmd
end

